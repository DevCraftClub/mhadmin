{% autoescape 'js' %}
	<script>

        function parse_str(str, array) {
            //       discuss at: http://phpjs.org/functions/parse_str/
            //      original by: Cagri Ekin
            //      improved by: Michael White (http://getsprink.com)
            //      improved by: Jack
            //      improved by: Brett Zamir (http://brett-zamir.me)
            //      bugfixed by: Onno Marsman
            //      bugfixed by: Brett Zamir (http://brett-zamir.me)
            //      bugfixed by: stag019
            //      bugfixed by: Brett Zamir (http://brett-zamir.me)
            //      bugfixed by: MIO_KODUKI (http://mio-koduki.blogspot.com/)
            // reimplemented by: stag019
            //         input by: Dreamer
            //         input by: Zaide (http://zaidesthings.com/)
            //         input by: David Pesta (http://davidpesta.com/)
            //         input by: jeicquest
            //      modified by: 2015-04-13 corey gilmore
            //                 -  indent using tabs (personal preference)
            //                 -  always return a parsed object, never put variables in the global scope
            //                 -  strip leading ? and & from the passed string
            // --------------------------------------------------
            //             note: When a particular argument has been passed, and the returned value is different parse_str of PHP. For example, a=b=c&d====c
            //             test: skip
            //        example 1: var arr = {};
            //        example 1: parse_str('first=foo&second=bar', arr);
            //        example 1: $result = arr
            //        returns 1: { first: 'foo', second: 'bar' }
            //        example 2: var arr = {};
            //        example 2: parse_str('str_a=Jack+and+Jill+didn%27t+see+the+well.', arr);
            //        example 2: $result = arr
            //        returns 2: { str_a: "Jack and Jill didn't see the well." }
            //        example 3: var abc = {3:'a'};
            //        example 3: parse_str('abc[a][b]["c"]=def&abc[q]=t+5');
            //        returns 3: {"3":"a","a":{"b":{"c":"def"}},"q":"t 5"}

            var strArr = String(str)
                    .replace(/^[?&]/, '')
                    .replace(/&$/, '')
                    .split('&'),
                sal = strArr.length,
                i, j, ct, p, lastObj, obj, lastIter, undef, chr, tmp, key, value,
                postLeftBracketPos, keys, keysLen,
                fixStr = function (str) {
                    return decodeURIComponent(str.replace(/\+/g, '%20'));
                };

            if (!array) {
                array = {};
            }

            for (i = 0; i < sal; i++) {
                tmp = strArr[i].split('=');
                key = fixStr(tmp[0]);
                value = (tmp.length < 2) ? '' : fixStr(tmp[1]);

                while (key.charAt(0) === ' ') {
                    key = key.slice(1);
                }
                if (key.indexOf('\x00') > -1) {
                    key = key.slice(0, key.indexOf('\x00'));
                }
                if (key && key.charAt(0) !== '[') {
                    keys = [];
                    postLeftBracketPos = 0;
                    for (j = 0; j < key.length; j++) {
                        if (key.charAt(j) === '[' && !postLeftBracketPos) {
                            postLeftBracketPos = j + 1;
                        } else if (key.charAt(j) === ']') {
                            if (postLeftBracketPos) {
                                if (!keys.length) {
                                    keys.push(key.slice(0, postLeftBracketPos - 1));
                                }
                                keys.push(key.substr(postLeftBracketPos, j - postLeftBracketPos));
                                postLeftBracketPos = 0;
                                if (key.charAt(j + 1) !== '[') {
                                    break;
                                }
                            }
                        }
                    }
                    if (!keys.length) {
                        keys = [key];
                    }
                    for (j = 0; j < keys[0].length; j++) {
                        chr = keys[0].charAt(j);
                        if (chr === ' ' || chr === '.' || chr === '[') {
                            keys[0] = keys[0].substr(0, j) + '_' + keys[0].substr(j + 1);
                        }
                        if (chr === '[') {
                            break;
                        }
                    }

                    obj = array;
                    for (j = 0, keysLen = keys.length; j < keysLen; j++) {
                        key = keys[j].replace(/^['"]/, '')
                            .replace(/['"]$/, '');
                        lastIter = j !== keys.length - 1;
                        lastObj = obj;
                        if ((key !== '' && key !== ' ') || j === 0) {
                            if (obj[key] === undef) {
                                obj[key] = {};
                            }
                            obj = obj[key];
                        } else {
                            // To insert new dimension
                            ct = -1;
                            for (p in obj) {
                                if (obj.hasOwnProperty(p)) {
                                    if (+p > ct && p.match(/^\d+$/g)) {
                                        ct = +p;
                                    }
                                }
                            }
                            key = ct + 1;
                        }
                    }
                    lastObj[key] = value;
                }
            }
            return array;
        }

        function tableEntry(id, ori, abbr, own_name) {
            return `
                <tr id="c-${id}" data-id="${id}">
					<td>
						<div class="ui checkbox" data-checkbox="countries">
							<input type="checkbox" name="country[]" value="${id}">
						</div>
						<input type="hidden" name="id" value="${id}" tabindex="0" class="hidden">
					</td>
					<td>${id}</td>
					<td data-name="ori">
					    <input type="text" name="original" value="${ori}" placeholder="{% trans %}Оригинальная аббревиатура{% endtrans %}">
					</td>
					<td data-name="abbr">
					    <input type="text" name="abbr" value="${abbr}" placeholder="{% trans %}Русская аббревиатура{% endtrans %}">
					</td>
					<td data-name="own_name">
					    <input type="text" name="translated" value="${own_name}" placeholder="{% trans %}Перевод страны{% endtrans %}">
					</td>
					<td class="right aligned">
						<div class="ui icon top left pointing dropdown button">
							<i class="wrench icon"></i>
							<div class="menu">
                                <a data-action='change' class='item act_btn' role='button' data-id='${id}'>
                                    <i class="fa-duotone fa-pen-to-square"></i> {% trans %}Изменить{% endtrans %}
                                </a>
                                <a data-action='reset' class='item act_btn' role='button' data-id='${id}'>
                                    <i class="fa-duotone fa-circle-xmark"></i> {% trans %}Очистить{% endtrans %}
                                </a>
                                <a data-action='delete' class='item act_btn' role='button' data-id='${id}'>
                                    <i class="fa-duotone fa-trash-can"></i> {% trans %}Удалить{% endtrans %}
                                </a>
						    </div>
						</div>
					</td>
				</tr>
            `
        }

        function countryForm(new_ori = '', new_abbr = '', new_tran = '', id = 0) {
            let
                ori = (new_ori !== '') ? new_ori : '{% trans %}Аббревиатура страны{% endtrans %}',
                abbr = (new_abbr !== '') ? new_abbr : '{% trans %}Русская аббревиатура страны{% endtrans %}',
                tran = (new_tran !== '') ? new_tran : '{% trans %}Русское название страны{% endtrans %}',
                id_field = (id !== 0) ? `<input type="hidden" name="form_id" id="form_id" value="${id}">` : ''
            ;


            return '<div class="ui form">' +
                '<div class="field">\n' +
                '<label for="new_ori">{% trans %}Название страны в оригинале{% endtrans %}</label>\n' +
                '<input type="text" name="new_ori" id="new_ori" placeholder="' + ori + '" value="' + ((id !== 0 && new_ori !== '') ? ori : '') + '" required>\n' +
                '</div>' +
                '<div class="field">\n' +
                '<label for="new_abbr">{% trans %}Русская аббревиатура{% endtrans %}</label>\n' +
                '<input type="text" name="new_abbr" id="new_abbr" placeholder="' + abbr + '" value="' + ((id !== 0 && new_abbr !== '') ? abbr : '') + '">\n' +
                '</div>' +
                '<div class="field">\n' +
                '<label for="new_tran">{% trans %}Русское название страны{% endtrans %}</label>\n' +
                '<input type="text" name="new_tran" id="new_tran" placeholder="' + tran + '" value="' + ((id !== 0 && new_tran !== '') ? tran : '') + '">\n' +
                '</div>' +
                id_field +
                '</div>';

        }

        function deleteOrReset(action, id, own_name, abbr, ori) {
            let parent = $('#c-' + id);

            $.ajax({
                url: 'engine/ajax/controller.php?mod=maharder',
                data: {
                    user_hash: '{{ dle_login_hash }}',
                    module: 'myshows',
                    file: 'countries',
                    action: action,
                    id: id,
                    own: own_name,
                    abbr: abbr,
                    ori: ori
                },
                type: 'POST',
                success: function (data) {
                    if (action == "reset") {
                        $(parent).find('[name="translated"]').val('');
                        $(parent).find('[name="abbr"]').val('');
                    } else if (action == "delete") $(parent).remove();
                    hideLoading('');
                    $('body')
                        .toast({
                            displayTime: 'auto',
                            showProgress: 'bottom',
                            classProgress: 'blue',
                            class: 'success',
                            message: 'Страна была успешно изменена!'
                        })
                    ;
                }
            });
        }

        function createNew(action, original, new_name, new_abbr) {
            $.ajax({
                url: 'engine/ajax/controller.php?mod=maharder',
                data: {
                    user_hash: '{{ dle_login_hash }}',
                    module: 'myshows',
                    file: 'countries',
                    action: action,
                    original: original,
                    own: new_name,
                    abbr: new_abbr
                },
                type: 'POST',
                success: function (data) {
                    try {
                        data = JSON.parse(data);
                    } catch (e) {
                        if (typeof (data) != 'object') {
                            console.log(data);
                            $('body')
                                .toast({
                                    displayTime: 'auto',
                                    showProgress: 'bottom',
                                    classProgress: 'white',
                                    class: 'error',
                                    message: 'Произошла ошибка при обработке данных! Смотрите консоль браузера для подробностей!'
                                })
                            ;
                        }
                    }
                    $('[data-id="categories"]').append(tableEntry(data.id, data.original, data.abbr, data.translated));
                    $('body')
                        .toast({
                            displayTime: 'auto',
                            showProgress: 'bottom',
                            classProgress: 'white',
                            class: 'success',
                            message: 'Страна была успешно добавлена!'
                        })
                    ;
                }
            });
        }

        function changeCountry(original, new_name, new_abbr, id) {
            $.ajax({
                url: 'engine/ajax/controller.php?mod=maharder',
                data: {
                    user_hash: '{{ dle_login_hash }}',
                    module: 'myshows',
                    file: 'countries',
                    action: 'save',
                    original: original,
                    own: new_name,
                    abbr: new_abbr,
                    id: id
                },
                type: 'POST',
                success: function (data) {
                    try {
                        data = JSON.parse(data);
                    } catch (e) {
                        if (typeof (data) != 'object') {
                            console.log(data);
                            $('body')
                                .toast({
                                    displayTime: 'auto',
                                    showProgress: 'bottom',
                                    classProgress: 'white',
                                    class: 'error',
                                    message: 'Произошла ошибка при обработке данных! Смотрите консоль браузера для подробностей!'
                                })
                            ;
                        }
                    }
                    let
                        entry = $(document).find('#c-' + data.data.id).first(),
                        orig = $(entry).find('[name="original"]').first(),
                        abbr = $(entry).find('[name="abbr"]').first(),
                        own_name = $(entry).find('[name="translated"]').first()
                    ;

                    $(orig).val(data.data.original);
                    $(abbr).val(data.data.abbr);
                    $(own_name).val(data.data.translated);
                    $('body')
                        .toast({
                            displayTime: 'auto',
                            showProgress: 'top',
                            classProgress: 'white',
                            class: 'success',
                            message: 'Страна была успешно изменена!'
                        })
                    ;
                }
            });
        }

        $(() => {
            $(document).on('click', '.act_btn', function () {
                const
                    parent = $(this).parents('tr'),
                    id = $(this).data('id'),
                    own_name = $(parent).find('[name="translated"]').val(),
                    ori = $(parent).find('[name="original"]').val(),
                    abbr = $(parent).find('[name="abbr"]').val(),
                    action = $(this).data('action');

                startLoading();

                switch (action) {
                    case 'delete':
                    case 'reset':
                        deleteOrReset(action, id, own_name, abbr, ori);
                        break;

                    case 'new':
                        $.confirm({
                            title: '{% trans %}Добавить новую страну{% endtrans %}',
                            theme: 'supervan',
                            useBootstrap: false,
                            content: countryForm(),
                            buttons: {
                                spreichern: {
                                    text: 'Сохранить',
                                    btnClass: 'ui button green',
                                    keys: ['enter'],
                                    action: function () {
                                        let original = $('#new_ori').val(), new_abbr = $('#new_abbr').val(),
                                            new_name = $('#new_tran').val();
                                        if (original == '') $.alert('{% trans %}Аббревиатура страны в оригинале не должна быть пустой!{% endtrans %}');
                                        else createNew(action, original, new_name, new_abbr);
                                        hideLoading();
                                    }
                                },
                                abbrechen: {
                                    text: 'Отмена',
                                    btnClass: 'ui button red',
                                    keys: ['esc'],
                                    action: function () {
                                        hideLoading();
                                    }
                                },
                            }
                        });
                        break;

                    case 'change':
                        $.confirm({
                            title: '{% trans %}Изменить страну: {% endtrans %}' + ori,
                            theme: 'supervan',
                            useBootstrap: false,
                            content: countryForm(ori, abbr, own_name, id),
                            buttons: {
                                spreichern: {
                                    text: 'Сохранить',
                                    btnClass: 'ui button green',
                                    keys: ['enter'],
                                    action: function () {
                                        let original = $('#new_ori').val(), new_abbr = $('#new_abbr').val(),
                                            new_name = $('#new_tran').val(), id = $('#form_id').val();
                                        if (original == '') $.alert('{% trans %}Аббревиатура страны в оригинале не должна быть пустой!{% endtrans %}');
                                        else changeCountry(original, new_name, new_abbr, id);

                                        hideLoading();
                                    }
                                },
                                abbrechen: {
                                    text: 'Отмена',
                                    btnClass: 'ui button red',
                                    keys: ['esc'],
                                    action: function () {
                                        hideLoading();
                                    }
                                },
                            }
                        });
                        break;

                    case 'save_selected':
                    case 'delete_selected':
                    case 'reset_selected':

                        var countries = parse_str($('[data-type="form"]').serialize()).country;

                        for (var c of Object.keys(countries)) {
                            let c_id = countries[c],
                                parent = $('#c-' + c_id),
                                own_name = $(parent).find('[name="translated"]').first().val(),
                                this_id = $(parent).find('[name="this_id"]').first().val(),
                                ori = $(parent).find('[name="original"]').first().val(),
                                abbr = $(parent).find('[name="abbr"]').first().val();

                            if (action === 'save_selected') changeCountry(ori, own_name, abbr, this_id);
                            else if (action === 'delete_selected') deleteOrReset('delete', this_id, own_name, abbr, ori);
                            else if (action === 'reset_selected') deleteOrReset('reset', this_id, own_name, abbr, ori);

                            setTimeout(function () {}, 1000);
                        }

                        hideLoading();

                        break;
                }
            });

            $('#countries').checkbox({
                onChecked: function () {
                    var $parentCheckBox = $('#countries'),
                        $childCheckbox = $parentCheckBox.parents('table').find('tbody').first().find('.checkbox');
                    $childCheckbox.checkbox('check');
                    $('.massaction').removeClass('disabled');
                },
                onUnchecked: function () {
                    var $parentCheckBox = $('#countries'),
                        $childCheckbox = $parentCheckBox.parents('table').find('tbody').first().find('.checkbox');
                    $childCheckbox.checkbox('uncheck');
                    $('.massaction').addClass('disabled');

                }
            });

            $('[data-checkbox="countries"]').checkbox({
                fireOnInit: true,
                onChange: function () {
                    var $listGroup = $(this).closest('[data-id="categories"]'),
                        $parentCheckbox = $('#countries'),
                        $checkbox = $listGroup.find('.checkbox'),
                        allChecked = true,
                        allUnchecked = true
                    ;
                    $checkbox.each(function () {
                        if ($(this).checkbox('is checked')) {
                            allUnchecked = false;
                        } else {
                            allChecked = false;
                        }
                    });
                    if (allChecked) {
                        $parentCheckbox.checkbox('set checked');
                        $('.massaction').removeClass('disabled');
                    } else if (allUnchecked) {
                        $parentCheckbox.checkbox('set unchecked');
                        $('.massaction').addClass('disabled');
                    } else {
                        $parentCheckbox.checkbox('set indeterminate');
                        $('.massaction').removeClass('disabled');
                    }
                }
            });
        });
	</script>
{% endautoescape %}